{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hatar\\\\reactProject\\\\check-weather\\\\src\\\\searchEngine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchEngine({\n  setWeather,\n  city,\n  setCity,\n  setLocalTime,\n  setForecast\n}) {\n  _s();\n  const [inputCity, setInputCity] = useState(\"\");\n  const [timezone, setTimezone] = useState();\n  const fetchWeather = useCallback(cityName => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=2b6fdad0cbd018949c50c70f72250726&units=metric`;\n    axios.get(url).then(response => {\n      setWeather({\n        temperature: response.data.main.temp,\n        icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n        description: response.data.weather[0].description,\n        // Add description for the weather icon\n        timezone: response.data.timezone,\n        feelsLike: response.data.main.feels_like,\n        humidity: response.data.main.humidity,\n        wind: response.data.wind.speed\n      });\n      setTimezone(response.data.timezone); // Update the timezone state\n      fetchForecast(cityName);\n      console.log(response);\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error.message);\n    });\n  }, [setWeather]);\n  const fetchForecast = cityName => {\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=2b6fdad0cbd018949c50c70f72250726&units=metric`;\n    axios.get(url).then(response => {\n      const dailyForecast = processForecast(response.data.list);\n      setForecast(dailyForecast);\n    }).catch(error => {\n      console.error(\"Error fetching forecast:\", error.message);\n    });\n  };\n  const processForecast = data => {\n    let dailyData = {};\n    data.forEach(item => {\n      let date = item.dt_txt.split(\" \")[0]; // Extract only the date (YYYY-MM-DD)\n      if (!dailyData[date]) {\n        dailyData[date] = {\n          minTemp: item.main.temp_min,\n          maxTemp: item.main.temp_max,\n          icon: item.weather[0].icon\n        };\n      } else {\n        dailyData[date].minTemp = Math.min(dailyData[date].minTemp, item.main.temp_min);\n        dailyData[date].maxTemp = Math.max(dailyData[date].maxTemp, item.main.temp_max);\n      }\n    });\n    return Object.keys(dailyData).slice(0, 5).map(date => ({\n      date,\n      ...dailyData[date]\n    }));\n  };\n  useEffect(() => {\n    fetchWeather(city);\n  }, [city, fetchWeather]);\n  useEffect(() => {\n    if (timezone !== undefined) {\n      // Update the local time every second\n      const interval = setInterval(() => {\n        const utcTime = Date.now();\n        const localTimeInMilliseconds = utcTime + timezone;\n        const localDate = new Date(localTimeInMilliseconds); // Convert to Date object\n\n        // Format the date and time\n        const options = {\n          weekday: \"long\",\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        };\n        const formattedTime = localDate.toLocaleString(\"en-US\", options);\n        setLocalTime(formattedTime); // Update the state\n      }, 1000);\n\n      // Cleanup interval on component unmount\n      return () => clearInterval(interval);\n    }\n  }, [timezone, setLocalTime]);\n  const capitalizeCity = name => name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputCity.trim()) {\n      const normalizedCity = capitalizeCity(inputCity);\n      setCity(normalizedCity);\n      fetchWeather(normalizedCity);\n      setInputCity(\"\");\n    } else {\n      console.error(\"City name cannot be empty.\");\n    }\n  };\n  const handleInputChange = event => {\n    setInputCity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"searchContainer\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a city..\",\n        value: inputCity,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" \\uD83D\\uDD0E \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchEngine, \"JYBo4whbA4MMcQep/rogz37saUM=\");\n_c = SearchEngine;\nvar _c;\n$RefreshReg$(_c, \"SearchEngine\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","SearchEngine","setWeather","city","setCity","setLocalTime","setForecast","_s","inputCity","setInputCity","timezone","setTimezone","fetchWeather","cityName","url","get","then","response","temperature","data","main","temp","icon","weather","description","feelsLike","feels_like","humidity","wind","speed","fetchForecast","console","log","catch","error","message","dailyForecast","processForecast","list","dailyData","forEach","item","date","dt_txt","split","minTemp","temp_min","maxTemp","temp_max","Math","min","max","Object","keys","slice","map","undefined","interval","setInterval","utcTime","Date","now","localTimeInMilliseconds","localDate","options","weekday","hour","minute","formattedTime","toLocaleString","clearInterval","capitalizeCity","name","charAt","toUpperCase","toLowerCase","handleSubmit","event","preventDefault","trim","normalizedCity","handleInputChange","target","value","children","className","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hatar/reactProject/check-weather/src/searchEngine.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport default function SearchEngine({ setWeather, city, setCity, setLocalTime, setForecast }) {\r\n  const [inputCity, setInputCity] = useState(\"\");\r\n  const [timezone, setTimezone] = useState();\r\n\r\n\r\n  const fetchWeather = useCallback((cityName) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=2b6fdad0cbd018949c50c70f72250726&units=metric`;\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setWeather({\r\n          temperature: response.data.main.temp,\r\n          icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\r\n          description: response.data.weather[0].description, // Add description for the weather icon\r\n          timezone: response.data.timezone,\r\n          feelsLike: response.data.main.feels_like,\r\n          humidity: response.data.main.humidity,\r\n          wind: response.data.wind.speed,\r\n        });\r\n        setTimezone(response.data.timezone); // Update the timezone state\r\n        fetchForecast(cityName);\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching weather data:\", error.message);\r\n      });\r\n  },\r\n    [setWeather]\r\n  );\r\n\r\n  const fetchForecast = (cityName) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=2b6fdad0cbd018949c50c70f72250726&units=metric`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const dailyForecast = processForecast(response.data.list);\r\n        setForecast(dailyForecast);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching forecast:\", error.message);\r\n      });\r\n  };\r\n  const processForecast = (data) => {\r\n    let dailyData = {};\r\n    data.forEach((item) => {\r\n      let date = item.dt_txt.split(\" \")[0]; // Extract only the date (YYYY-MM-DD)\r\n      if (!dailyData[date]) {\r\n        dailyData[date] = {\r\n          minTemp: item.main.temp_min,\r\n          maxTemp: item.main.temp_max,\r\n          icon: item.weather[0].icon,\r\n        };\r\n      } else {\r\n        dailyData[date].minTemp = Math.min(dailyData[date].minTemp, item.main.temp_min);\r\n        dailyData[date].maxTemp = Math.max(dailyData[date].maxTemp, item.main.temp_max);\r\n      }\r\n    });\r\n    return Object.keys(dailyData)\r\n      .slice(0, 5)\r\n      .map((date) => ({\r\n        date,\r\n        ...dailyData[date],\r\n      }));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWeather(city);\r\n  }, [city, fetchWeather]);\r\n\r\n  useEffect(() => {\r\n    if (timezone !== undefined) {\r\n      // Update the local time every second\r\n      const interval = setInterval(() => {\r\n        const utcTime = Date.now();\r\n        const localTimeInMilliseconds = utcTime + timezone;\r\n        const localDate = new Date(localTimeInMilliseconds); // Convert to Date object\r\n\r\n        // Format the date and time\r\n        const options = {\r\n          weekday: \"long\",\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        };\r\n        const formattedTime = localDate.toLocaleString(\"en-US\", options);\r\n        setLocalTime(formattedTime); // Update the state\r\n      }, 1000);\r\n\r\n      // Cleanup interval on component unmount\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timezone, setLocalTime]);\r\n\r\n  const capitalizeCity = (name) =>\r\n    name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (inputCity.trim()) {\r\n      const normalizedCity = capitalizeCity(inputCity);\r\n      setCity(normalizedCity);\r\n      fetchWeather(normalizedCity);\r\n      setInputCity(\"\");\r\n    } else {\r\n      console.error(\"City name cannot be empty.\");\r\n    }\r\n\r\n\r\n\r\n  }\r\n  const handleInputChange = (event) => {\r\n    setInputCity(event.target.value);\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"searchContainer\" onSubmit={handleSubmit}>\r\n        <input type=\"text\"\r\n          placeholder=\"Enter a city..\"\r\n          value={inputCity}\r\n          onChange={handleInputChange}></input>\r\n        <button type=\"submit\"> 🔎 </button>\r\n      </form>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}